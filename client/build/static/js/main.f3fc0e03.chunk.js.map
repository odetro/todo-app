{"version":3,"sources":["calander/CalendarView.js","notes/note/note.js","notes/notes.js","todo-list/AppContext.js","todo-list/todoListItems/task/Task.js","todo-list/todoListItems/newTask/NewTask.js","todo-list/todoListItems/TodoListItems.js","todo-list/TodoListApp.js","App.js","reportWebVitals.js","index.js"],"names":["CalendarView","className","calendarType","prev2AriaLabel","Contanier","styled","div","NoteDiv","Textarea","textarea","id","note","a","requestOptions","method","headers","body","JSON","stringify","fetch","result","json","Note","props","rows","cols","placeholder","onChange","e","editNote","target","value","Container","Header","H3","h3","fetchNotes","Notes","useState","myNotes","setMyNotes","useEffect","get","length","map","tempNote","_id","AppContext","React","createContext","TaskItem","TaskHeader","label","StyledInput","input","TaskAction","StyledButton","button","Action","Icon","IconHover","completed","task","Task","context","useContext","type","checked","complete","taskStatus","setTaskChanged","taskChanged","console","log","onClick","editTask","prompt","then","deleteTask","NewTaskContainer","NewTaskItem","NewTaskInput","category","NewTask","newTask","setNewTask","onKeyPress","charCode","preventDefault","createNewTask","setTaskSubmitted","H2","h2","Day","span","Month","DetailsContainer","Details","OpenTasks","Filter","StyledNavLink","NavLink","TodosList","Center","p","Clear","ClearComplete","DefaultBtn","HoverBtn","fetchTodos","dayFormat","day","parseInt","TodoListItems","now","require","dayjs","params","useParams","useRouteMatch","path","url","setCategory","todos","setTodos","todosLeft","setTodosLeft","todosActive","setTodosActive","todosCompleted","setTodosCompleted","getTasks","myTodos","todo","filter","r","taskSubmitted","format","hidden","to","getNoTaskCreated","exact","deleteCompletedTask","getClearBtn","CategoryDiv","ActiveTodosDot","Text","List","fetchActiveCategories","resulttemp","resultArr","res","push","TodoListApp","activeCategories","setActiveCategories","appContextValues","findIfActive","categories","includes","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAIO,SAASA,IACZ,OACI,qBAAKC,UAAU,qBAAf,SACI,cAAC,IAAD,CAAUC,aAAa,SAASC,eAAe,O,ooBCJ3D,IAAMC,EAAYC,IAAOC,IAAV,KAOTC,EAAUF,IAAOC,IAAV,KAMPE,EAAWH,IAAOI,SAAV,K,4CAad,WAAyBC,EAAIC,GAA7B,iBAAAC,EAAA,6DACUC,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAC,KAAQP,KAJtC,SAMyBQ,MAAM,cAAD,OAAeT,GAAMG,GANnD,cAMUO,EANV,yBAOWA,EAAOC,QAPlB,4C,sBAUO,SAASC,EAAKC,GAMjB,OACI,cAACnB,EAAD,UACI,cAACG,EAAD,UACI,cAACC,EAAD,CAAUP,UAAU,YAAYuB,KAAK,KAAKC,KAAK,KAAKC,YAAY,sBAAsBC,SAP7E,SAACC,I,sCAClBC,CAAUN,EAAMb,GAAIkB,EAAEE,OAAOC,QAMrB,SAA+GR,EAAMZ,W,0kBC5CrI,IAAMqB,EAAY3B,IAAOC,IAAV,KAST2B,EAAS5B,IAAOC,IAAV,KAON4B,EAAK7B,IAAO8B,GAAV,K,SAMOC,I,2EAAf,4BAAAxB,EAAA,sEACyBO,MAAM,cAD/B,cACUC,EADV,yBAEWA,EAAOC,QAFlB,4C,sBAKO,SAASgB,IAAS,IAAD,EACUC,mBAAS,IADnB,mBACbC,EADa,KACJC,EADI,KA0BpB,OAvBAC,qBAAU,YACG,uCAAG,4BAAA7B,EAAA,sEACawB,IADb,OACFhB,EADE,OAERoB,EAAWpB,GAFH,2CAAH,qDAITsB,KACF,IAkBE,eAACV,EAAD,WACI,cAACC,EAAD,UACI,cAACC,EAAD,4BAEJ,8BAnBoB,IAAnBK,EAAQI,OACF,8CAIHJ,EAAQK,KAAI,SAAAC,GAAQ,OAAI,cAACvB,EAAD,CAEpBZ,GAAOmC,EAASC,IAChBnC,KAAOkC,EAASlC,MAFRkC,EAASC,aC/C9B,IAAMC,EAAaC,IAAMC,gB,qrCCGhC,IAAMC,EAAW7C,IAAOC,IAAV,KAMR6C,EAAa9C,IAAO+C,MAAV,KAKVC,EAAchD,IAAOiD,MAAV,KAGXC,EAAalD,IAAOC,IAAV,IAEV4C,GAKAM,EAAenD,IAAOoD,OAAV,KAWZC,EAASrD,IAAOC,IAAV,KAENqD,EAAOtD,IAAOC,IAAV,IAEJoD,GAIAE,EAAYvD,IAAOC,IAAV,IAEToD,G,4CAKN,WAA2BhD,EAAImD,GAA/B,iBAAAjD,EAAA,6DACUC,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAC,UAAa2C,KAJ3C,SAMyB1C,MAAM,cAAD,OAAeT,GAAMG,GANnD,cAMUO,EANV,yBAOWA,EAAOC,QAPlB,4C,kEAUA,WAA2BX,GAA3B,eAAAE,EAAA,sEACyBO,MAAM,qBAAD,OAAsBT,GAAM,CAACI,OAAQ,WADnE,cACUM,EADV,yBAEWA,EAAOC,QAFlB,4C,kEAKA,WAAyBX,EAAIoD,GAA7B,iBAAAlD,EAAA,6DACUC,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAC,KAAQ4C,KAJtC,SAMyB3C,MAAM,cAAD,OAAeT,GAAMG,GANnD,cAMUO,EANV,yBAOWA,EAAOC,QAPlB,4C,sBAUO,SAAS0C,GAAKxC,GACjB,IAAMyC,EAAUC,qBAAWlB,GAS3B,OACI,eAACG,EAAD,WACI,eAACC,EAAD,WACI,cAACE,EAAD,CAAaa,KAAK,WAAWC,QAAS5C,EAAMsC,UAAY,UAAY,GAAIlC,SAV7D,SAACC,GACpB,IAAMwC,GAAY7C,EAAMsC,W,sCACxBQ,CAAW9C,EAAMb,GAAI0D,GACrBJ,EAAQM,gBAAgBN,EAAQO,aAChCC,QAAQC,IAAI,oBAOJ,sBAAMxE,UAAU,cACfsB,EAAMuC,QAEX,eAACP,EAAD,WACI,cAACG,EAAD,UACI,eAACF,EAAD,CAAckB,QAAS,SAAA9C,GAAC,O,6CAAI+C,CAASpD,EAAMb,GAAIkE,OAAOrD,EAAMuC,OAAOe,KAAKb,EAAQM,gBAAgBN,EAAQO,eAAxG,UACI,cAACZ,EAAD,UAAM,cAAC,IAAD,MACN,cAACC,EAAD,UAAW,cAAC,IAAD,WAGnB,cAACF,EAAD,UACI,eAACF,EAAD,CAAckB,QAAS,SAAA9C,GAAC,O,2CAAIkD,CAAWvD,EAAMb,IAAImE,KAAKb,EAAQM,gBAAgBN,EAAQO,eAAtF,UACI,cAACZ,EAAD,UAAM,cAAC,IAAD,MACN,cAACC,EAAD,UAAW,cAAC,IAAD,iB,8pBCnGnC,IAAMmB,GAAmB1E,IAAOC,IAAV,MAQhB0E,GAAc3E,IAAOC,IAAV,MASX2E,GAAe5E,IAAOiD,MAAV,M,8CAUlB,WAA8BQ,EAAMoB,GAApC,iBAAAtE,EAAA,6DACUC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjB,KAAQ4C,GAAc,wBACtB,SAAYoB,KANxB,SASyB/D,MAAM,aAAcN,GAT7C,cASUO,EATV,yBAUWA,EAAOC,QAVlB,4C,sBAaO,SAAS8D,GAAQ5D,GAAQ,IAAD,EAEGe,mBAAS,eAFZ,mBAEpB8C,EAFoB,KAEXC,EAFW,KAGrBrB,EAAUC,qBAAWlB,IAAe,GAkB1C,OACI,cAACgC,GAAD,UACI,eAACC,GAAD,WACI,cAAC,IAAD,IACA,cAACC,GAAD,CAAcvD,YAAY,cAAcC,SApB/B,SAACC,GAClByD,EAAWzD,EAAEE,OAAOC,QAmBoDuD,WAhBvD,SAAC1D,GACC,KAAfA,EAAE2D,UAAmB3D,EAAEE,OAAOC,MAAMY,OAAS,IAC7Cf,EAAE4D,iB,uCACFC,CAAcL,EAAS7D,EAAM2D,UACzBlB,EAAQ0B,kBACR1B,EAAQ0B,iBAAiBN,GAE7BC,EAAW,IACXzD,EAAEE,OAAOC,MAAQ,Y,uvGCtD7B,IAAMC,GAAY3B,IAAOC,IAAV,MAUT2B,GAAS5B,IAAOC,IAAV,MAQNqF,GAAKtF,IAAOuF,GAAV,MAKFC,GAAMxF,IAAOyF,KAAV,MAGHC,GAAQ1F,IAAOyF,KAAV,MAOLE,GAAmB3F,IAAOC,IAAV,MAIhB2F,GAAU5F,IAAOC,IAAV,MAQP4F,GAAY7F,IAAOC,IAAV,MAIT6F,GAAS9F,IAAOC,IAAV,MAIN8F,GAAgB/F,YAAOgG,KAAPhG,CAAH,MAyBbiG,GAAYjG,IAAOC,IAAV,MAQTiG,GAASlG,IAAOmG,EAAV,MAGNC,GAAQpG,IAAOC,IAAV,MAiBLoG,GAAgBrG,IAAOoD,OAAV,MAYbkD,GAAatG,IAAOC,IAAV,KAEVmG,IAIAG,GAAWvG,IAAOC,IAAV,KAERmG,I,SAISI,G,iFAAf,WAA0B3B,GAA1B,eAAAtE,EAAA,sEACyBO,MAAM,cAAD,OAAe+D,IAD7C,cACU9D,EADV,yBAEWA,EAAOC,QAFlB,4C,oEAKA,WAAmC6D,GAAnC,eAAAtE,EAAA,sEACyBO,MAAM,yBAAD,OAA0B+D,GAAY,CAACpE,OAAQ,WAD7E,cACUM,EADV,yBAEWA,EAAOC,QAFlB,4C,sBAKA,SAASyF,GAAUC,GACf,OAAQC,SAASD,IACb,KAAK,EAAI,MAAO,KAChB,KAAK,EAAI,MAAO,KAChB,KAAK,EAAI,MAAO,KAChB,QAAS,MAAO,MAIjB,SAASE,GAAc1F,GAE1B,IAAMyC,EAAUC,qBAAWlB,GAGvBmE,EADUC,EAAQ,GACZC,GAEJC,EAASC,eAPkB,EAQXC,eAAdC,EARyB,EAQzBA,KAAMC,EARmB,EAQnBA,IARmB,EASAnF,mBAAS+E,EAAOnC,UAThB,mBAS1BA,EAT0B,KAShBwC,EATgB,OAWPpF,mBAAS,IAXF,mBAW1BqF,EAX0B,KAWnBC,EAXmB,OAYCtF,mBAAS,GAZV,mBAY1BuF,EAZ0B,KAYfC,EAZe,OAaKxF,mBAAS,IAbd,mBAa1ByF,EAb0B,KAabC,EAba,OAcW1F,mBAAS,IAdpB,mBAc1B2F,EAd0B,KAcVC,EAdU,KAsDjC,SAASC,EAASC,GACd,OACIA,EAAQxF,KAAI,SAAAyF,GAAI,OAAI,cAACtE,GAAD,CAEpBrD,GAAO2H,EAAKvF,IACZgB,KAAOuE,EAAKvE,KACZD,UAAYwE,EAAKxE,WAHTwE,EAAKvF,QAQrB,OAjDAL,qBAAU,WACF4E,GAAUA,EAAOnC,UACjBwC,EAAYL,EAAOnC,YAEvB,CAACmC,IAEL5E,qBAAU,WACN+B,QAAQC,IAAI,mBACH,uCAAG,4BAAA7D,EAAA,sEACaiG,GAAW3B,GADxB,OACF9D,EADE,OAERwG,EAASxG,GACT0G,EAAa1G,EAAOkH,QAAQ,SAAAC,GAAC,OAAKA,EAAE1E,aAAWlB,QAC/CqF,EAAe5G,EAAOkH,QAAQ,SAAAC,GAAC,OAAKA,EAAE1E,cACtCqE,EAAkB9G,EAAOkH,QAAQ,SAAAC,GAAC,OAAIA,EAAE1E,cALhC,2CAAH,oDAOTnB,KACF,CAACsB,EAAQwE,cAAexE,EAAQO,YAAaW,IAkC3C,cAAC,KAAD,UACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,eAACS,GAAD,WAAKuB,EAAIuB,OAAO,QAAhB,KAA0B,eAAC5C,GAAD,WAAMqB,EAAIuB,OAAO,KAAM3B,GAAUI,EAAIuB,OAAO,SAAtE,OACA,eAAC1C,GAAD,eAASmB,EAAIuB,OAAO,QAApB,OACA,cAACzC,GAAD,CAAkB0C,OAAyB,IAAjBf,EAAMhF,OAAhC,SACI,eAACsD,GAAD,WACI,cAACC,GAAD,UACI,qCAAQ2B,EAAR,oBAEJ,eAAC1B,GAAD,WACI,cAACC,GAAD,CAAeuC,GAAE,UAAKlB,EAAL,QAAjB,iBACA,cAACrB,GAAD,CAAeuC,GAAE,UAAKlB,EAAL,WAAjB,oBACA,cAACrB,GAAD,CAAeuC,GAAE,UAAKlB,EAAL,cAAjB,kCAKhB,cAACtC,GAAD,CAASD,SAAUA,IACnB,eAACoB,GAAD,WAvCZ,WACI,IAAKqB,EAAMhF,OACP,OACI,cAAC4D,GAAD,mCAqCKqC,GACD,eAAC,KAAD,WACI,cAAC,KAAD,CAAOC,OAAK,EAACrB,KAAI,UAAKA,EAAL,WAAjB,SACMW,EAASJ,KAEf,cAAC,KAAD,CAAOc,OAAK,EAACrB,KAAI,UAAKA,EAAL,cAAjB,SACMW,EAASF,KAEf,cAAC,KAAD,CAAOY,OAAK,EAACrB,KAAI,UAAKA,EAAL,QAAjB,SACMW,EAASR,WA7DnC,WACI,GAAIM,EAAetF,OACf,OACI,eAAC8D,GAAD,WACI,cAACC,GAAD,CAAehC,QAAS,SAAA9C,I,6CAAMkH,CAAoB5D,GAAUL,KAAKb,EAAQM,gBAAgBN,EAAQO,eAAjG,6BACA,cAACoC,GAAD,UAAY,cAAC,IAAD,MACZ,cAACC,GAAD,UAAU,cAAC,IAAD,SA2DbmC,Q,61DCzPjB,IAAM/G,GAAY3B,IAAOC,IAAV,MAOT6F,GAAS9F,IAAOC,IAAV,MASN0I,GAAc3I,IAAOC,IAAV,MAKX8F,GAAgB/F,YAAOgG,KAAPhG,CAAH,MA8BbsD,GAAOtD,IAAOC,IAAV,MAIJ2I,GAAiB5I,IAAOC,IAAV,MAUd4I,GAAO7I,IAAOC,IAAV,KAGJ0I,IAIAG,GAAO9I,IAAOC,IAAV,M,SAQK8I,K,8EAAf,gCAAAxI,EAAA,sEACyBO,MAAM,gCAD/B,cACUC,EADV,gBAE6BA,EAAOC,OAFpC,cAEUgI,EAFV,OAIUC,EAAY,GAClBD,EAAWzG,KAAK,SAAA2G,GAAG,OAAID,EAAUE,KAAKD,EAAIzG,QAL9C,kBAOWwG,GAPX,4C,sBAUO,SAASG,KAAe,IAAD,EAEsBnH,mBAAS,IAF/B,mBAEnBoH,EAFmB,KAEDC,EAFC,OAGMrH,mBAAS,IAHf,mBAGnB4C,EAHmB,KAGTwC,EAHS,OAIgBpF,mBAAS,IAJzB,mBAInBkG,EAJmB,KAIJ9C,EAJI,OAKYpD,oBAAS,GALrB,mBAKnBiC,EALmB,KAOpBqF,EAAmB,CACrBpB,gBACA9C,mBACAnB,cACAD,eAXsB,MAc1B,SAASuF,EAAaC,GAClB,GAAIJ,EAAiBK,SAASD,GAC1B,OAAO,cAACb,GAAD,IAYf,OARAxG,qBAAW,YACE,uCAAG,4BAAA7B,EAAA,sEACawI,KADb,OACFhI,EADE,OAERuI,EAAoBvI,GAFZ,2CAAH,qDAITsB,KACF,CAACwC,EAAUX,EAAaiE,IAGtB,cAACzF,EAAWiH,SAAZ,CAAqBjI,MAAO6H,EAA5B,SACA,cAAC,KAAD,UACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,eAACZ,GAAD,WACI,eAAC,GAAD,CAAeL,GAAG,WAAWjE,QAAS,SAAA9C,GAAC,OAAI8F,EAAY,YAAvD,UAAmE,cAAC,GAAD,UAAM,cAAC,IAAD,MAAwB,cAACwB,GAAD,yBAChGW,EAAa,cAElB,eAACb,GAAD,WACI,eAAC,GAAD,CAAeL,GAAG,aAAajE,QAAS,SAAA9C,GAAC,OAAI8F,EAAY,cAAzD,UAAuE,cAAC,GAAD,UAAM,cAAC,IAAD,MAAwB,cAACwB,GAAD,2BACpGW,EAAa,gBAElB,eAACb,GAAD,WACI,eAAC,GAAD,CAAeL,GAAG,SAASjE,QAAS,SAAA9C,GAAC,OAAI8F,EAAY,UAArD,UAA+D,cAAC,GAAD,UAAM,cAAC,IAAD,MAAwB,cAACwB,GAAD,uBAC5FW,EAAa,YAElB,eAACb,GAAD,WACI,eAAC,GAAD,CAAeL,GAAG,YAAYjE,QAAS,SAAA9C,GAAC,OAAI8F,EAAY,aAAxD,UAAqE,cAAC,GAAD,UAAM,cAAC,IAAD,MAAgC,cAACwB,GAAD,0BAC1GW,EAAa,eAElB,eAACb,GAAD,WACI,eAAC,GAAD,CAAeL,GAAG,YAAYjE,QAAS,SAAA9C,GAAC,OAAI8F,EAAY,aAAxD,UAAqE,cAAC,GAAD,UAAM,cAAC,IAAD,MAA4B,cAACwB,GAAD,0BACtGW,EAAa,eAElB,eAACb,GAAD,WACI,eAAC,GAAD,CAAeL,GAAG,SAASjE,QAAS,SAAA9C,GAAC,OAAI8F,EAAY,UAArD,UAA+D,cAAC,GAAD,UAAM,cAAC,IAAD,MAAyB,cAACwB,GAAD,uBAC7FW,EAAa,YAElB,eAACb,GAAD,WACI,eAAC,GAAD,CAAeL,GAAG,YAAYjE,QAAS,SAAA9C,GAAC,OAAI8F,EAAY,aAAxD,UAAqE,cAAC,GAAD,UAAM,cAAC,IAAD,MAA2B,cAACwB,GAAD,0BACrGW,EAAa,eAElB,eAACb,GAAD,WACI,eAAC,GAAD,CAAeL,GAAG,SAASjE,QAAS,SAAA9C,GAAC,OAAI8F,EAAY,UAArD,UAA+D,cAAC,GAAD,UAAM,cAAC,IAAD,MAAwB,cAACwB,GAAD,uBAC5FW,EAAa,eAGtB,cAACV,GAAD,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAO3B,KAAK,aAAZ,SACI,cAACP,GAAD,MAEJ,cAAC,KAAD,CAAO4B,OAAK,EAACrB,KAAK,IAAlB,SACI,cAAC,KAAD,CAAUmB,GAAG,2BC/I1BsB,OArBf,WACE,OACE,sBAAKhK,UAAU,gBAAf,UACE,qBAAKA,UAAU,WAGf,qBAAKA,UAAU,YAAf,SACE,cAACwJ,GAAD,MAEF,sBAAKxJ,UAAU,WAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAACoC,EAAD,MAEF,qBAAKpC,UAAU,kBAAf,SACE,cAAC,EAAD,aCPKiK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvF,MAAK,YAAkD,IAA/CwF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.f3fc0e03.chunk.js","sourcesContent":["import React from 'react';\nimport Calendar from 'react-calendar';\nimport './CalendarView.scss';\n\nexport function CalendarView() {\n    return (\n        <div className=\"calander-container\">\n            <Calendar calendarType=\"Hebrew\" prev2AriaLabel=\"\"/>\n        </div>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Contanier = styled.div`\n    text-align: left;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-self: center;\n`\nconst NoteDiv = styled.div`\n    align-self: end;\n    margin-top: 30px;\n    display: flex;\n    align-items: center;\n`\nconst Textarea = styled.textarea`\n    width: 100%;\n    border: none;\n    font-size: 16px;\n    resize: none;\n    font-family: sans-serif;\n    color: #8F94A2;\n\n    :focus {\n        outline: none\n    };\n`\n\nasync function editNote (id, note) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\"note\": note})\n    };\n    const result = await fetch(`/api/notes/${id}`, requestOptions);\n    return result.json();\n}\n\nexport function Note(props) {\n\n    const handleChange = (e) => {\n        editNote (props.id, e.target.value)\n      };\n\n    return (\n        <Contanier>\n            <NoteDiv>\n                <Textarea className=\"noteInput\" rows=\"10\" cols=\"33\" placeholder=\"Write notes here...\" onChange={handleChange}>{props.note}</Textarea>\n            </NoteDiv>\n        </Contanier>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Note } from './note/note';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    min-height: 100%;\n    background-color: white;\n    align-items: center;\n    border-radius: 10px;\n`\nconst Header = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    flex-direction: column;\n    border-radius: 10px 10px 0 0;\n`\nconst H3 = styled.h3`\n    color: #7160b7;\n    align-self: end;\n    margin: 30px 0 4px 45px;\n`\n\nasync function fetchNotes() {\n    const result = await fetch('/api/notes');\n    return result.json();\n}\n\nexport function Notes() {\n    const [myNotes, setMyNotes] = useState([]);\n\n    useEffect(() => {\n        const get = async () => {\n            const result = await fetchNotes();\n            setMyNotes(result);\n            }\n        get();\n    },[]);\n\n    function getNotes () {\n        if ( myNotes.length === 0 ) {\n            return <span>loading...</span>\n        }\n        else {\n            return (\n                myNotes.map(tempNote => <Note \n                    key = { tempNote._id }\n                    id = { tempNote._id }\n                    note={ tempNote.note } \n                    ></Note>)\n            )\n        }\n    }\n\n    return (\n        <Container>\n            <Header>\n                <H3>Quick Notes</H3>\n            </Header>\n            <div>\n                {getNotes()}\n            </div>\n        </Container>\n    )\n}","import React from 'react';\n\nexport const AppContext = React.createContext();","import React, { useContext } from 'react';\nimport { AppContext } from '../../AppContext';\nimport { AiOutlineDelete, AiFillDelete, AiOutlineEdit, AiTwotoneEdit} from 'react-icons/ai';\nimport styled from 'styled-components';\n\nconst TaskItem = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 15px;\n`\nconst TaskHeader = styled.label`\n    display: block;\n    display: flex;\n    align-items: center;\n`\nconst StyledInput = styled.input`\n    margin-right: 17px;\n`\nconst TaskAction = styled.div`\n    display: none;\n    ${TaskItem}:hover & {\n        display: flex;\n        font-size: 15px;\n    }\n`\nconst StyledButton = styled.button`\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n    color: #8F94A2;\n    font-size: 14px;\n    margin-right: 10px;\n    &:focus {\n        outline: none;\n    }\n`\nconst Action = styled.div``\n\nconst Icon = styled.div`\n    display: inline;\n    ${Action}:hover & {\n        display: none;\n    }\n`\nconst IconHover = styled.div`\n    display: none;\n    ${Action}:hover & {\n        display: inline;\n    }\n`\n\nasync function taskStatus (id, completed) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\"completed\": completed})\n    };\n    const result = await fetch(`/api/todos/${id}`, requestOptions);\n    return result.json();\n}\n\nasync function deleteTask (id) {\n    const result = await fetch(`/api/todos/delete/${id}`, {method: 'DELETE'});\n    return result.json();\n}\n\nasync function editTask (id, task) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\"task\": task})\n    };\n    const result = await fetch(`/api/todos/${id}`, requestOptions);\n    return result.json();\n}\n\nexport function Task(props) {\n    const context = useContext(AppContext);\n\n    const CheckboxChange = (e) => {\n        const complete = !props.completed;\n        taskStatus(props.id, complete);\n        context.setTaskChanged(!context.taskChanged);\n        console.log(\"changed value\");\n      };\n\n    return (\n        <TaskItem>\n            <TaskHeader>\n                <StyledInput type=\"checkbox\" checked={props.completed ? \"checked\" : \"\"} onChange={CheckboxChange}/>\n                <span className=\"checkmark\"></span>\n                {props.task}\n            </TaskHeader>\n            <TaskAction>\n                <Action>\n                    <StyledButton onClick={e => editTask(props.id, prompt(props.task)).then(context.setTaskChanged(!context.taskChanged))}>\n                        <Icon><AiOutlineEdit /></Icon>\n                        <IconHover><AiTwotoneEdit /></IconHover>\n                    </StyledButton>\n                </Action>\n                <Action>\n                    <StyledButton onClick={e => deleteTask(props.id).then(context.setTaskChanged(!context.taskChanged))}>\n                        <Icon><AiOutlineDelete /></Icon>\n                        <IconHover><AiFillDelete /></IconHover>\n                    </StyledButton>\n                </Action>\n            </TaskAction>\n        </TaskItem>)\n}","import React, { useContext, useState } from 'react';\nimport { AppContext } from '../../AppContext';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport styled from 'styled-components';\n\nconst NewTaskContainer = styled.div`  \n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-self: center;\n    border-bottom: 1px solid #e9e9e9;\n    margin-bottom: 20px;\n`\nconst NewTaskItem = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n    margin-top: 20px;\n    font-size: 25px;\n    padding-left: 30px;\n    max-width: 80%;\n`\nconst NewTaskInput = styled.input`\n    width: 100%;\n    border: none;\n    font-size: 16px;\n    margin-left: 17px;\n    &:focus {\n        outline: none;\n    }\n`\n\nasync function createNewTask (task, category) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n            \"task\": task ? task : \"Error: Not Valid Task\",\n            \"category\": category\n        })\n    };\n    const result = await fetch('/api/todos', requestOptions);\n    return result.json();\n}\n\nexport function NewTask(props) {\n\n    const [newTask, setNewTask] = useState(\"new task...\");\n    const context = useContext(AppContext) || {};\n\n    const handleChange = (e) => {        \n        setNewTask(e.target.value);\n      };\n\n    const handleSubmit = (e) => {\n        if (e.charCode === 13 && e.target.value.length > 0) {\n            e.preventDefault();\n            createNewTask(newTask, props.category);\n            if (context.setTaskSubmitted) { \n                context.setTaskSubmitted(newTask)\n            };\n            setNewTask(\"\");\n            e.target.value = \"\";\n          }\n      };\n\n    return (\n        <NewTaskContainer>\n            <NewTaskItem>\n                <AiOutlinePlus />\n                <NewTaskInput placeholder=\"new task...\" onChange={handleChange} onKeyPress={handleSubmit} />\n            </NewTaskItem>\n        </NewTaskContainer>\n    )\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { Task } from './task/Task';\nimport { NewTask } from './newTask/NewTask';\nimport { AppContext } from '../AppContext';\nimport { BrowserRouter, Switch, Route, NavLink, useRouteMatch, useParams } from 'react-router-dom';\nimport { AiOutlineDelete, AiFillDelete } from 'react-icons/ai';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    min-height: 100%;\n    background-color: white;\n    align-items: center;\n    border-radius: 10px;\n    position: absolute;\n`\nconst Header = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    flex-direction: column;\n    border-radius: 10px 10px 0 0;\n    border-bottom: 1px solid #e9e9e9;\n`\nconst H2 = styled.h2`\n    color: #7160b7;\n    align-self: end;\n    margin: 30px 0 4px 45px;\n`\nconst Day = styled.span`\n    font-weight: 500;\n`\nconst Month = styled.span`\n    display: flex;\n    align-self: end;\n    margin-left: 45px;\n    color: #b3aad8;\n    font-size: 16px;\n`\nconst DetailsContainer = styled.div`\n    display: flex;\n    width: 100%;\n`\nconst Details = styled.div`\n    margin: 45px 45px 18px 45px;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    align-items: center;\n    color: #C5C7E4;\n`\nconst OpenTasks = styled.div`\n    color: #8F94A2;\n    font-size: 14px;\n`\nconst Filter = styled.div`\n    display: flex;\n    font-size: 12px;\n`\nconst StyledNavLink = styled(NavLink)`\n    border: none;\n    background-color: #E0F3FF;\n    color: #8F94A2;\n    margin-left: 10px;\n    padding: 6px 14px;\n    border-radius: 10px;\n    cursor: pointer;\n    text-decoration: none;\n\n    :hover {\n        background-color: #d0edff;\n        color: #8F94A2;\n    }\n    :focus {\n        outline: none;\n        color: #5a678a;\n        background-color: #cdecff;\n    }\n\n    &.active {\n        color: #5a678a;\n        background-color: #cdecff;\n    }\n`\nconst TodosList = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    padding: 0 30px 30px 30px;\n    align-self: center;\n    margin-bottom: 30px;\n`\nconst Center = styled.p`\n    text-align: center;\n`\nconst Clear = styled.div`\n    display: flex;\n    align-items: center;\n    color: #F8979A;\n    right: 25px;\n    padding-bottom: 20px;\n    cursor: pointer;\n    justify-content: flex-end;\n    position: absolute;\n    bottom: 10px;\n\n    :hover {\n        AiFillDelete {\n            display: inline;\n        }\n    }\n`\nconst ClearComplete = styled.button`\n    border: none;\n    background-color: transparent;\n    color: #F8979A;\n    margin-left: 7px;\n    border-radius: 10px;\n    cursor: pointer;\n\n    :focus {\n        outline: none;\n    }\n`\nconst DefaultBtn = styled.div`\n    display: inline;\n    ${Clear}:hover & {\n        display: none;\n    }\n`\nconst HoverBtn = styled.div`\n    display: none;\n    ${Clear}:hover & {\n        display: inline;\n    }\n`\nasync function fetchTodos(category) {\n    const result = await fetch(`/api/todos/${category}`);\n    return result.json();\n}\n\nasync function deleteCompletedTask(category){\n    const result = await fetch(`/api/todos/delete/all/${category}`, {method: 'DELETE'});\n    return result.json();\n}\n\nfunction dayFormat(day) {\n    switch (parseInt(day)) {\n        case 1:  return \"st\";\n        case 2:  return \"nd\";\n        case 3:  return \"rd\";\n        default: return \"th\";\n    }\n}\n\nexport function TodoListItems(props) {\n\n    const context = useContext(AppContext);\n\n    const dayjs = require('dayjs');\n    let now = dayjs();\n  \n    const params = useParams();\n    const { path, url } = useRouteMatch();\n    const [category, setCategory ] = useState(params.category)\n\n    const [todos, setTodos] = useState([]);\n    const [todosLeft, setTodosLeft] = useState(0);\n    const [todosActive, setTodosActive] = useState([]);\n    const [todosCompleted, setTodosCompleted] = useState([]);\n\n    useEffect(() => {\n        if (params && params.category) {\n            setCategory(params.category);\n        }\n    } , [params])\n\n    useEffect(() => {\n        console.log(\"updating app...\")\n        const get = async () => {\n            const result = await fetchTodos(category);\n            setTodos(result);\n            setTodosLeft(result.filter( r => !r.completed).length);\n            setTodosActive(result.filter( r => !r.completed));\n            setTodosCompleted(result.filter( r => r.completed));\n            }\n        get();\n    },[context.taskSubmitted, context.taskChanged, category]);\n\n    function getClearBtn() {\n        if (todosCompleted.length) {\n            return (\n                <Clear>\n                    <ClearComplete onClick={e => {deleteCompletedTask(category).then(context.setTaskChanged(!context.taskChanged))}}>Clear Completed</ClearComplete>\n                    <DefaultBtn><AiOutlineDelete /></DefaultBtn>\n                    <HoverBtn><AiFillDelete /></HoverBtn>\n                </Clear>\n            )\n        }\n    }\n\n    function getNoTaskCreated() {\n        if (!todos.length) {\n            return (\n                <Center>No tasks created yet</Center>\n            )\n        }\n    }\n\n    function getTasks(myTodos) {\n        return (\n            myTodos.map(todo => <Task \n            key = { todo._id }\n            id = { todo._id }\n            task={ todo.task } \n            completed={ todo.completed }></Task>\n            )\n        )\n    }\n\n    return ( \n        <BrowserRouter>\n            <Container>\n                <Header>\n                    <H2>{now.format(\"dddd\")}, <Day>{now.format(\"D\")}{dayFormat(now.format(\"D\"))}</Day> </H2>\n                    <Month> {now.format(\"MMMM\")} </Month>\n                    <DetailsContainer hidden={todos.length === 0}>\n                        <Details>\n                            <OpenTasks>\n                                <span> {todosLeft} tasks left </span>\n                            </OpenTasks>\n                            <Filter>\n                                <StyledNavLink to={`${url}/all`} >All</StyledNavLink>\n                                <StyledNavLink to={`${url}/active`} >Active</StyledNavLink>\n                                <StyledNavLink to={`${url}/completed`} >Completed</StyledNavLink>\n                            </Filter>\n                        </Details>\n                    </DetailsContainer>\n                </Header>\n                <NewTask category={category} />\n                <TodosList>\n                    {getNoTaskCreated()}\n                    <Switch>\n                        <Route exact path={`${path}/active`}>\n                            { getTasks(todosActive) }\n                        </Route>\n                        <Route exact path={`${path}/completed`}>\n                            { getTasks(todosCompleted) }\n                        </Route>\n                        <Route exact path={`${path}/all`}>\n                            { getTasks(todos) }\n                        </Route>\n                    </Switch>\n                </TodosList>\n                {getClearBtn()}\n            </Container>\n        </BrowserRouter>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { AppContext } from './AppContext';\nimport { TodoListItems } from './todoListItems/TodoListItems';\nimport { BrowserRouter, NavLink, Switch, Route, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AiOutlineBook, AiOutlineHome, AiOutlineStar, AiOutlineShoppingCart, AiOutlinePhone, AiOutlineMessage, AiOutlineCalendar, AiOutlineBulb} from 'react-icons/ai';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    min-height: 100%;\n    align-items: center;\n`\nconst Filter = styled.div`\n    width: 15%;\n    height: 100%;\n    position: absolute;\n    top: 20px;\n    right: 90%;\n    display: flex;\n    flex-direction: column;\n`\nconst CategoryDiv = styled.div`\n    display: flex;\n    align-items: start;\n    flex-direction: row-reverse;\n`\nconst StyledNavLink = styled(NavLink)`\n    height: 22px;\n    background-color: #8e82c1;\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    align-items: center;\n    border: none;\n    margin-bottom: 10px;\n    padding: 10px;\n    color: white;\n    border-radius: 7px 0 0 20px;\n    text-decoration: none;\n\n    :focus {\n        outline: none;\n        background-color: #7160B7;\n    }\n\n    :hover {\n        background-color: #7160B7;\n        cursor: pointer;\n        left: 2%;\n    }\n\n    &.active {\n        background-color: white;\n        color: #7160B7;\n    }\n`\nconst Icon = styled.div`\n    padding-right: 4px;\n    padding-left: 4px;\n`\nconst ActiveTodosDot = styled.div`\n    width: 8px;\n    height: 8px;\n    background-color: #FF5722;\n    border-radius: 50%;\n    border: 1.5px solid white;\n    position: relative;\n    top: 12px;\n    right: -3%;\n`\nconst Text = styled.div`\n    display: none;\n\n    ${CategoryDiv}:hover & {\n        display: flex;\n    }\n`\nconst List = styled.div`\n    width: 90%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 10%;\n`\n\nasync function fetchActiveCategories() {\n    const result = await fetch(`/api/todos/active-categories`);\n    const resulttemp = await result.json();\n\n    const resultArr = [];\n    resulttemp.map( res => resultArr.push(res._id));\n\n    return resultArr;\n}\n\nexport function TodoListApp() {\n\n    const [activeCategories, setActiveCategories] = useState([]);\n    const [category, setCategory] = useState(\"\")\n    const [taskSubmitted, setTaskSubmitted] = useState(\"\");\n    const [taskChanged, setTaskChanged] = useState(false);\n\n    const appContextValues = {\n        taskSubmitted,\n        setTaskSubmitted,\n        taskChanged,\n        setTaskChanged,\n    }\n\n    function findIfActive(categories) {\n        if (activeCategories.includes(categories)) {\n            return <ActiveTodosDot />\n        }\n    }\n\n    useEffect( () => {\n        const get = async () => {\n            const result = await fetchActiveCategories();\n            setActiveCategories(result);\n        }\n        get();\n    },[category, taskChanged, taskSubmitted])\n\n    return (\n        <AppContext.Provider value={appContextValues}>\n        <BrowserRouter>\n            <Container>\n                <Filter>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/general\" onClick={e => setCategory(\"general\")}><Icon><AiOutlineBook /></Icon><Text>General</Text></StyledNavLink>\n                        {findIfActive(\"general\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/important\" onClick={e => setCategory(\"important\")}><Icon><AiOutlineStar /></Icon><Text>Important</Text></StyledNavLink>\n                        {findIfActive(\"important\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/house\" onClick={e => setCategory(\"house\")}><Icon><AiOutlineHome /></Icon><Text>House</Text></StyledNavLink>\n                        {findIfActive(\"house\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/shopping\" onClick={e => setCategory(\"shopping\")}><Icon><AiOutlineShoppingCart /></Icon><Text>Shopping</Text></StyledNavLink>\n                        {findIfActive(\"shopping\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/meetings\" onClick={e => setCategory(\"meetings\")}><Icon><AiOutlineCalendar /></Icon><Text>Meetings</Text></StyledNavLink>\n                        {findIfActive(\"meetings\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/calls\" onClick={e => setCategory(\"calls\")}><Icon><AiOutlinePhone /></Icon><Text>Calls</Text></StyledNavLink>\n                        {findIfActive(\"calls\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/messages\" onClick={e => setCategory(\"messages\")}><Icon><AiOutlineMessage /></Icon><Text>Messages</Text></StyledNavLink>\n                        {findIfActive(\"messages\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/ideas\" onClick={e => setCategory(\"ideas\")}><Icon><AiOutlineBulb /></Icon><Text>Ideas</Text></StyledNavLink>\n                        {findIfActive(\"ideas\")}\n                    </CategoryDiv>\n                </Filter>\n                <List>\n                    <Switch>\n                        <Route path=\"/:category\">\n                            <TodoListItems />\n                        </Route>\n                        <Route exact path=\"/\" >\n                            <Redirect to=\"/general\" />\n                        </Route>\n                    </Switch>\n                </List>\n            </Container>\n        </BrowserRouter>\n        </AppContext.Provider>\n    )\n}","import './App.css';\nimport { CalendarView } from './calander/CalendarView';\nimport { Notes } from './notes/notes';\nimport { TodoListApp } from './todo-list/TodoListApp';\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <div className=\"topbar\">\n\n      </div>\n      <div className=\"app-right\">\n        <TodoListApp />\n      </div>\n      <div className=\"app-left\">\n        <div className=\"app-left-top\">\n          <Notes />\n        </div>\n        <div className=\"app-left-bottom\">\n          <CalendarView />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}