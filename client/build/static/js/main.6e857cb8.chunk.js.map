{"version":3,"sources":["calander/CalendarView.js","notes/note/note.js","notes/notes.js","todo-list/AppContext.js","todo-list/todoListItems/task/Task.js","todo-list/todoListItems/newTask/NewTask.js","todo-list/todoListItems/TodoListItems.js","todo-list/TodoListApp.js","App.js","reportWebVitals.js","index.js"],"names":["CalendarView","className","calendarType","prev2AriaLabel","Contanier","styled","div","NoteDiv","Textarea","textarea","id","note","a","requestOptions","method","headers","body","JSON","stringify","fetch","result","json","Note","props","rows","cols","placeholder","onChange","e","editNote","target","value","Container","Header","H3","h3","fetchNotes","Notes","useState","myNotes","setMyNotes","useEffect","get","length","map","tempNote","_id","AppContext","React","createContext","completed","task","Task","context","useContext","type","checked","complete","taskStatus","setTaskChanged","taskChanged","console","log","onClick","editTask","prompt","then","deleteTask","category","NewTask","newTask","setNewTask","onKeyPress","charCode","preventDefault","createNewTask","setTaskSubmitted","H2","h2","Day","span","Month","DetailsContainer","Details","OpenTasks","Filter","StyledNavLink","NavLink","TodosList","Center","p","Clear","ClearComplete","button","DefaultBtn","HoverBtn","fetchTodos","dayFormat","day","parseInt","TodoListItems","now","require","dayjs","params","useParams","useRouteMatch","path","url","setCategory","todos","setTodos","todosLeft","setTodosLeft","todosActive","setTodosActive","todosCompleted","setTodosCompleted","getTasks","myTodos","todo","filter","r","taskSubmitted","format","hidden","to","getNoTaskCreated","exact","deleteCompletedTask","getClearBtn","CategoryDiv","Icon","ActiveTodosDot","Text","List","fetchActiveCategories","resulttemp","resultArr","res","push","TodoListApp","activeCategories","setActiveCategories","appContextValues","findIfActive","categories","includes","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e857cb8.chunk.js","sourcesContent":["import React from 'react';\nimport Calendar from 'react-calendar';\nimport './CalendarView.scss';\n\nexport function CalendarView() {\n    return (\n        <div className=\"calander-container\">\n            <Calendar calendarType=\"Hebrew\" prev2AriaLabel=\"\"/>\n        </div>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Contanier = styled.div`\n    text-align: left;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-self: center;\n`\nconst NoteDiv = styled.div`\n    align-self: end;\n    margin-top: 30px;\n    display: flex;\n    align-items: center;\n`\nconst Textarea = styled.textarea`\n    width: 100%;\n    border: none;\n    font-size: 16px;\n    resize: none;\n    font-family: sans-serif;\n    color: #8F94A2;\n\n    :focus {\n        outline: none\n    };\n`\n\nasync function editNote (id, note) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\"note\": note})\n    };\n    const result = await fetch(`/api/notes/${id}`, requestOptions);\n    return result.json();\n}\n\nexport function Note(props) {\n\n    const handleChange = (e) => {\n        editNote (props.id, e.target.value)\n      };\n\n    return (\n        <Contanier>\n            <NoteDiv>\n                <Textarea className=\"noteInput\" rows=\"10\" cols=\"33\" placeholder=\"Write notes here...\" onChange={handleChange}>{props.note}</Textarea>\n            </NoteDiv>\n        </Contanier>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Note } from './note/note';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    min-height: 100%;\n    background-color: white;\n    align-items: center;\n    border-radius: 10px;\n`\nconst Header = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    flex-direction: column;\n    border-radius: 10px 10px 0 0;\n`\nconst H3 = styled.h3`\n    color: #7160b7;\n    align-self: end;\n    margin: 30px 0 4px 45px;\n`\n\nasync function fetchNotes() {\n    const result = await fetch('/api/notes');\n    return result.json();\n}\n\nexport function Notes() {\n    const [myNotes, setMyNotes] = useState([]);\n\n    useEffect(() => {\n        const get = async () => {\n            const result = await fetchNotes();\n            setMyNotes(result);\n            }\n        get();\n    },[]);\n\n    function getNotes () {\n        if ( myNotes.length === 0 ) {\n            return <span>loading...</span>\n        }\n        else {\n            return (\n                myNotes.map(tempNote => <Note \n                    key = { tempNote._id }\n                    id = { tempNote._id }\n                    note={ tempNote.note } \n                    ></Note>)\n            )\n        }\n    }\n\n    return (\n        <Container>\n            <Header>\n                <H3>Quick Notes</H3>\n            </Header>\n            <div>\n                {getNotes()}\n            </div>\n        </Container>\n    )\n}","import React from 'react';\n\nexport const AppContext = React.createContext();","import './task.scss';\nimport React, { useContext } from 'react';\nimport { AppContext } from '../../AppContext';\nimport { AiOutlineDelete, AiFillDelete, AiOutlineEdit, AiTwotoneEdit} from 'react-icons/ai';\n\nasync function taskStatus (id, completed) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\"completed\": completed})\n    };\n    const result = await fetch(`/api/todos/${id}`, requestOptions);\n    return result.json();\n}\n\nasync function deleteTask (id) {\n    const result = await fetch(`/api/todos/delete/${id}`, {method: 'DELETE'});\n    return result.json();\n}\n\nasync function editTask (id, task) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\"task\": task})\n    };\n    const result = await fetch(`/api/todos/${id}`, requestOptions);\n    return result.json();\n}\n\nexport function Task(props) {\n    const context = useContext(AppContext);\n\n    const CheckboxChange = (e) => {\n        const complete = !props.completed;\n        taskStatus(props.id, complete);\n        context.setTaskChanged(!context.taskChanged);\n        console.log(\"changed value\");\n      };\n\n    return (<div className=\"task\">\n            <label className=\"container\">\n                <input type=\"checkbox\" checked={props.completed ? \"checked\" : \"\"} onChange={CheckboxChange}/>\n                <span className=\"checkmark\"></span>\n                {props.task}\n            </label>\n            <div className=\"taskAction\">\n                <div className=\"editOne\">\n                    <button className=\"edit\" onClick={e => editTask(props.id, prompt(props.task)).then(context.setTaskChanged(!context.taskChanged))}>\n                        <AiOutlineEdit className=\"icon\"/>\n                        <AiTwotoneEdit className=\"iconHover\"/>\n                    </button>\n                </div>\n                <div className=\"deleteOne\">\n                    <button className=\"delete\" onClick={e => deleteTask(props.id).then(context.setTaskChanged(!context.taskChanged))}>\n                        <AiOutlineDelete className=\"icon\"/>\n                        <AiFillDelete className=\"iconHover\"/>\n                    </button>\n                </div>\n            </div>\n        </div>)\n}","import React, { useContext, useState } from 'react';\nimport { AppContext } from '../../AppContext';\nimport './newTask.scss';\nimport { AiOutlinePlus } from 'react-icons/ai';\n\nasync function createNewTask (task, category) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n            \"task\": task ? task : \"Error: Not Valid Task\",\n            \"category\": category\n        })\n    };\n    const result = await fetch('/api/todos', requestOptions);\n    return result.json();\n}\n\nexport function NewTask(props) {\n\n    const [newTask, setNewTask] = useState(\"new task...\");\n    const context = useContext(AppContext) || {};\n\n    const handleChange = (e) => {        \n        setNewTask(e.target.value);\n      };\n\n    const handleSubmit = (e) => {\n        if (e.charCode === 13 && e.target.value.length > 0) {\n            e.preventDefault();\n            createNewTask(newTask, props.category);\n            if (context.setTaskSubmitted) { \n                context.setTaskSubmitted(newTask)\n            };\n            setNewTask(\"\");\n            e.target.value = \"\";\n          }\n      };\n\n    return (\n        <div className=\"newTask-container\">\n            <div className=\"newTask\">\n                <AiOutlinePlus />\n                <input className=\"newTaskInput\" placeholder=\"new task...\" onChange={handleChange} onKeyPress={handleSubmit}></input>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { Task } from './task/Task';\nimport { NewTask } from './newTask/NewTask';\nimport { AppContext } from '../AppContext';\nimport { BrowserRouter, Switch, Route, NavLink, useRouteMatch, useParams } from 'react-router-dom';\nimport { AiOutlineDelete, AiFillDelete } from 'react-icons/ai';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    min-height: 100%;\n    background-color: white;\n    align-items: center;\n    border-radius: 10px;\n    position: absolute;\n`\nconst Header = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    flex-direction: column;\n    border-radius: 10px 10px 0 0;\n    border-bottom: 1px solid #e9e9e9;\n`\nconst H2 = styled.h2`\n    color: #7160b7;\n    align-self: end;\n    margin: 30px 0 4px 45px;\n`\nconst Day = styled.span`\n    font-weight: 500;\n`\nconst Month = styled.span`\n    display: flex;\n    align-self: end;\n    margin-left: 45px;\n    color: #b3aad8;\n    font-size: 16px;\n`\nconst DetailsContainer = styled.div`\n    display: flex;\n    width: 100%;\n`\nconst Details = styled.div`\n    margin: 45px 45px 18px 45px;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    align-items: center;\n    color: #C5C7E4;\n`\nconst OpenTasks = styled.div`\n    color: #8F94A2;\n    font-size: 14px;\n`\nconst Filter = styled.div`\n    display: flex;\n    font-size: 12px;\n`\nconst StyledNavLink = styled(NavLink)`\n    border: none;\n    background-color: #E0F3FF;\n    color: #8F94A2;\n    margin-left: 10px;\n    padding: 6px 14px;\n    border-radius: 10px;\n    cursor: pointer;\n    text-decoration: none;\n\n    :hover {\n        background-color: #d0edff;\n        color: #8F94A2;\n    }\n    :focus {\n        outline: none;\n        color: #5a678a;\n        background-color: #cdecff;\n    }\n\n    &.active {\n        color: #5a678a;\n        background-color: #cdecff;\n    }\n`\nconst TodosList = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    padding: 0 30px 30px 30px;\n    align-self: center;\n    margin-bottom: 30px;\n`\nconst Center = styled.p`\n    text-align: center;\n`\nconst Clear = styled.div`\n    display: flex;\n    align-items: center;\n    color: #F8979A;\n    right: 25px;\n    padding-bottom: 20px;\n    cursor: pointer;\n    justify-content: flex-end;\n    position: absolute;\n    bottom: 10px;\n\n    :hover {\n        AiFillDelete {\n            display: inline;\n        }\n    }\n`\nconst ClearComplete = styled.button`\n    border: none;\n    background-color: transparent;\n    color: #F8979A;\n    margin-left: 7px;\n    border-radius: 10px;\n    cursor: pointer;\n\n    :focus {\n        outline: none;\n    }\n`\nconst DefaultBtn = styled.div`\n    display: inline;\n    ${Clear}:hover & {\n        display: none;\n    }\n`\nconst HoverBtn = styled.div`\n    display: none;\n    ${Clear}:hover & {\n        display: inline;\n    }\n`\nasync function fetchTodos(category) {\n    const result = await fetch(`/api/todos/${category}`);\n    return result.json();\n}\n\nasync function deleteCompletedTask(category){\n    const result = await fetch(`/api/todos/delete/all/${category}`, {method: 'DELETE'});\n    return result.json();\n}\n\nfunction dayFormat(day) {\n    switch (parseInt(day)) {\n        case 1:  return \"st\";\n        case 2:  return \"nd\";\n        case 3:  return \"rd\";\n        default: return \"th\";\n    }\n}\n\nexport function TodoListItems(props) {\n\n    const context = useContext(AppContext);\n\n    const dayjs = require('dayjs');\n    let now = dayjs();\n  \n    const params = useParams();\n    const { path, url } = useRouteMatch();\n    const [category, setCategory ] = useState(params.category)\n\n    const [todos, setTodos] = useState([]);\n    const [todosLeft, setTodosLeft] = useState(0);\n    const [todosActive, setTodosActive] = useState([]);\n    const [todosCompleted, setTodosCompleted] = useState([]);\n\n    useEffect(() => {\n        if (params && params.category) {\n            setCategory(params.category);\n        }\n    } , [params])\n\n    useEffect(() => {\n        console.log(\"updating app...\")\n        const get = async () => {\n            const result = await fetchTodos(category);\n            setTodos(result);\n            setTodosLeft(result.filter( r => !r.completed).length);\n            setTodosActive(result.filter( r => !r.completed));\n            setTodosCompleted(result.filter( r => r.completed));\n            }\n        get();\n    },[context.taskSubmitted, context.taskChanged, category]);\n\n    function getClearBtn() {\n        if (todosCompleted.length) {\n            return (\n                <Clear>\n                    <ClearComplete onClick={e => {deleteCompletedTask(category).then(context.setTaskChanged(!context.taskChanged))}}>Clear Completed</ClearComplete>\n                    <DefaultBtn><AiOutlineDelete /></DefaultBtn>\n                    <HoverBtn><AiFillDelete /></HoverBtn>\n                </Clear>\n            )\n        }\n    }\n\n    function getNoTaskCreated() {\n        if (!todos.length) {\n            return (\n                <Center>No tasks created yet</Center>\n            )\n        }\n    }\n\n    function getTasks(myTodos) {\n        return (\n            myTodos.map(todo => <Task \n            key = { todo._id }\n            id = { todo._id }\n            task={ todo.task } \n            completed={ todo.completed }></Task>\n            )\n        )\n    }\n\n    return ( \n        <BrowserRouter>\n            <Container>\n                <Header>\n                    <H2>{now.format(\"dddd\")}, <Day>{now.format(\"D\")}{dayFormat(now.format(\"D\"))}</Day> </H2>\n                    <Month> {now.format(\"MMMM\")} </Month>\n                    <DetailsContainer hidden={todos.length === 0}>\n                        <Details>\n                            <OpenTasks>\n                                <span> {todosLeft} tasks left </span>\n                            </OpenTasks>\n                            <Filter>\n                                <StyledNavLink to={`${url}/all`} >All</StyledNavLink>\n                                <StyledNavLink to={`${url}/active`} >Active</StyledNavLink>\n                                <StyledNavLink to={`${url}/completed`} >Completed</StyledNavLink>\n                            </Filter>\n                        </Details>\n                    </DetailsContainer>\n                </Header>\n                <NewTask category={category} />\n                <TodosList>\n                    {getNoTaskCreated()}\n                    <Switch>\n                        <Route exact path={`${path}/active`}>\n                            { getTasks(todosActive) }\n                        </Route>\n                        <Route exact path={`${path}/completed`}>\n                            { getTasks(todosCompleted) }\n                        </Route>\n                        <Route exact path={`${path}/all`}>\n                            { getTasks(todos) }\n                        </Route>\n                    </Switch>\n                </TodosList>\n                {getClearBtn()}\n            </Container>\n        </BrowserRouter>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { AppContext } from './AppContext';\nimport { TodoListItems } from './todoListItems/TodoListItems';\nimport { BrowserRouter, NavLink, Switch, Route, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AiOutlineBook, AiOutlineHome, AiOutlineStar, AiOutlineShoppingCart, AiOutlinePhone, AiOutlineMessage, AiOutlineCalendar, AiOutlineBulb} from 'react-icons/ai';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    min-height: 100%;\n    align-items: center;\n`\nconst Filter = styled.div`\n    width: 15%;\n    height: 100%;\n    position: absolute;\n    top: 20px;\n    right: 90%;\n    display: flex;\n    flex-direction: column;\n`\nconst CategoryDiv = styled.div`\n    display: flex;\n    align-items: start;\n    flex-direction: row-reverse;\n`\nconst StyledNavLink = styled(NavLink)`\n    height: 22px;\n    background-color: #8e82c1;\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    align-items: center;\n    border: none;\n    margin-bottom: 10px;\n    padding: 10px;\n    color: white;\n    border-radius: 7px 0 0 20px;\n    text-decoration: none;\n\n    :focus {\n        outline: none;\n        background-color: #7160B7;\n    }\n\n    :hover {\n        background-color: #7160B7;\n        cursor: pointer;\n        left: 2%;\n    }\n\n    &.active {\n        background-color: white;\n        color: #7160B7;\n    }\n`\nconst Icon = styled.div`\n    padding-right: 4px;\n    padding-left: 4px;\n`\nconst ActiveTodosDot = styled.div`\n    width: 8px;\n    height: 8px;\n    background-color: #FF5722;\n    border-radius: 50%;\n    border: 1.5px solid white;\n    position: relative;\n    top: 12px;\n    right: -3%;\n`\nconst Text = styled.div`\n    display: none;\n\n    ${CategoryDiv}:hover & {\n        display: flex;\n    }\n`\nconst List = styled.div`\n    width: 90%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 10%;\n`\n\nasync function fetchActiveCategories() {\n    const result = await fetch(`/api/todos/active-categories`);\n    const resulttemp = await result.json();\n\n    const resultArr = [];\n    resulttemp.map( res => resultArr.push(res._id));\n\n    return resultArr;\n}\n\nexport function TodoListApp() {\n\n    const [activeCategories, setActiveCategories] = useState([]);\n    const [category, setCategory] = useState(\"\")\n    const [taskSubmitted, setTaskSubmitted] = useState(\"\");\n    const [taskChanged, setTaskChanged] = useState(false);\n\n    const appContextValues = {\n        taskSubmitted,\n        setTaskSubmitted,\n        taskChanged,\n        setTaskChanged,\n    }\n\n    function findIfActive(categories) {\n        if (activeCategories.includes(categories)) {\n            return <ActiveTodosDot />\n        }\n    }\n\n    useEffect( () => {\n        const get = async () => {\n            const result = await fetchActiveCategories();\n            setActiveCategories(result);\n        }\n        get();\n    },[category, taskChanged, taskSubmitted])\n\n    return (\n        <AppContext.Provider value={appContextValues}>\n        <BrowserRouter>\n            <Container>\n                <Filter>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/general\" onClick={e => setCategory(\"general\")}><Icon><AiOutlineBook /></Icon><Text>General</Text></StyledNavLink>\n                        {findIfActive(\"general\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/important\" onClick={e => setCategory(\"important\")}><Icon><AiOutlineStar /></Icon><Text>Important</Text></StyledNavLink>\n                        {findIfActive(\"important\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/house\" onClick={e => setCategory(\"house\")}><Icon><AiOutlineHome /></Icon><Text>House</Text></StyledNavLink>\n                        {findIfActive(\"house\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/shopping\" onClick={e => setCategory(\"shopping\")}><Icon><AiOutlineShoppingCart /></Icon><Text>Shopping</Text></StyledNavLink>\n                        {findIfActive(\"shopping\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/meetings\" onClick={e => setCategory(\"meetings\")}><Icon><AiOutlineCalendar /></Icon><Text>Meetings</Text></StyledNavLink>\n                        {findIfActive(\"meetings\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/calls\" onClick={e => setCategory(\"calls\")}><Icon><AiOutlinePhone /></Icon><Text>Calls</Text></StyledNavLink>\n                        {findIfActive(\"calls\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/messages\" onClick={e => setCategory(\"messages\")}><Icon><AiOutlineMessage /></Icon><Text>Messages</Text></StyledNavLink>\n                        {findIfActive(\"messages\")}\n                    </CategoryDiv>\n                    <CategoryDiv>\n                        <StyledNavLink to=\"/ideas\" onClick={e => setCategory(\"ideas\")}><Icon><AiOutlineBulb /></Icon><Text>Ideas</Text></StyledNavLink>\n                        {findIfActive(\"ideas\")}\n                    </CategoryDiv>\n                </Filter>\n                <List>\n                    <Switch>\n                        <Route path=\"/:category\">\n                            <TodoListItems />\n                        </Route>\n                        <Route exact path=\"/\" >\n                            <Redirect to=\"/general\" />\n                        </Route>\n                    </Switch>\n                </List>\n            </Container>\n        </BrowserRouter>\n        </AppContext.Provider>\n    )\n}","import './App.css';\nimport { CalendarView } from './calander/CalendarView';\nimport { Notes } from './notes/notes';\nimport { TodoListApp } from './todo-list/TodoListApp';\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <div className=\"topbar\">\n\n      </div>\n      <div className=\"app-right\">\n        <TodoListApp />\n      </div>\n      <div className=\"app-left\">\n        <div className=\"app-left-top\">\n          <Notes />\n        </div>\n        <div className=\"app-left-bottom\">\n          <CalendarView />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}